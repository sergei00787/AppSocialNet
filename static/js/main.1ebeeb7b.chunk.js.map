{"version":3,"sources":["api/api.js","redux/dialogsReducer.js","utils/object-helpers.js","redux/usersReducer.js","assets/image/preloader.svg","redux/authSelectors.js","redux/authReducer.js","redux/appReducer.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginForm.jsx","components/Login/LoginContainer.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Preloader/Preloader.jsx","components/FormColtrols/FormControl.jsx","utils/validators/validators.js","components/Navbar/Navbar.module.css","components/Header/Header.module.css","components/FormColtrols/styleControl.module.css","redux/profileReducer.js"],"names":["instanceAxios","axios","baseURL","withCredentials","headers","profileApi","getProfile","userId","get","then","response","data","getProfileStatus","setProfileStatus","status","put","setPhoto","photoFile","formData","FormData","append","usersApi","getUsers","usersInPageCount","currentPage","getUsersTotalCount","unfollow","delete","follow","post","headerApi","authMe","loginApi","login","email","password","rememberMe","logout","SEND_MESSAGE","initialState","Dialogs","id","dialogName","Messages","message","sendMessage","type","dialogsReducer","state","action","newMessage","updateObjectProperties","items","objPropName","propName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_USERS_COUNT","SET_PAGE_COUNT","SET_ACTIVE_PAGE","TOGGLE_IS_FETCHING","FETCHING_FOLLOWER","initState","pageCount","activePage","usersTotalCount","isFetching","fetchingFollowerList","users","usersReducer","followed","page","filter","setUsers","setPageCount","setActivePage","toggleIsFetching","fetchingFollower","requestUsersTC","dispatch","a","getUsersTotalCountTC","totalCount","Math","ceil","followUnfollowFlow","actionFetch","actionCreator","resultCode","followTC","unfollowTC","module","exports","getUserId","Auth","getEmail","getLogin","getIsAuthFetching","isAuthFetching","getIsAuth","isAuth","SET_AUTH_DATA","LOGIN","setAuthData","payload","authReducer","SUCCESS_INITIALIZED","initialized","appReducer","authMeTC","Navbar","props","listNav","name","path","navItem","key","className","cssNavbar","item","to","activeClassName","activeLink","nav","Header","cssHeader","header","Preloader","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","connect","maxlength100","maxLengthCreator","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","Field","component","InputControl","placeholder","validate","required","htmlFor","LoginContainer","values","errorMessage","messages","length","stopSubmit","_error","ProfileContainer","lazy","DialogsContainer","UsersContainer","App","initializeApp","from","fallback","render","compose","appState","promise","Promise","all","withRouter","Boolean","window","location","hostname","match","reducers","combineReducers","ProfileState","profileReducer","DialogState","UsersState","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","preloaderimg","FormControl","meta","hasError","touched","styles","formControl","children","input","otherProps","TextareaControl","value","undefined","maxLength","ADD_POST","SET_PROFILE","SET_PROFILE_STATUS","SET_PHOTO_SUCESS","Posts","countLikes","profile","addPost","newPost","getProfileTC","getProfileStatusTC","setProfileStatusTC","setPhotoTC","photos"],"mappings":"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","file":"static/js/main.1ebeeb7b.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nlet instanceAxios = axios.create({\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  withCredentials: true,\r\n  headers: { \"API-KEY\": \"dd386439-744d-4c39-9ab5-8f358cf58de7\" }\r\n})\r\n\r\nclass UsersAPI {\r\n\r\n  getUsers = (usersInPageCount = 10, currentPage = 1) => {\r\n    return instanceAxios.get(`users?count=${usersInPageCount}&page=${currentPage}`)\r\n      .then(response => { return (response.data) });\r\n  }\r\n\r\n  getUsersTotalCount = () => {\r\n    return instanceAxios.get(\"users\")\r\n      .then(response => { return (response.data) });\r\n  }\r\n\r\n  unfollow = (userId) => {\r\n    return instanceAxios.delete(\"follow/\"+userId)\r\n      .then(response => { return (response.data) });\r\n  }\r\n\r\n  follow = (userId) => {\r\n    return instanceAxios.post(\"follow/\"+userId)\r\n      .then(response => { return (response.data) });\r\n  }\r\n}\r\n\r\nclass ProfileAPI {\r\n\r\n  getProfile = (userId) => {\r\n    return instanceAxios.get('profile/'+userId).then(response => { return response.data});\r\n  }\r\n\r\n  getProfileStatus = (userId) => {\r\n    return instanceAxios.get('profile/status/' + userId).then(response => {return response.data});\r\n  }\r\n\r\n  setProfileStatus = (status) => {\r\n    return instanceAxios.put('profile/status', { status: status });\r\n  }\r\n\r\n  setPhoto = (photoFile) => {\r\n    const formData = new FormData();\r\n    formData.append('image', photoFile)\r\n    return instanceAxios.put(\r\n      'profile/photo',\r\n      formData, \r\n      { headers: {'Content-Type': 'multipart/form-data'}})\r\n  }\r\n  \r\n}\r\n\r\nclass HeaderAPI {\r\n  authMe = () => {\r\n    return instanceAxios.get('auth/me').then(response => {return response});\r\n  }\r\n}\r\n\r\n\r\nclass LoginAPI {\r\n  login = (email,password,rememberMe = false) => {\r\n    return instanceAxios.post('/auth/login',{ email, password, rememberMe});\r\n  }\r\n  logout = () => {\r\n    return instanceAxios.delete('/auth/login');\r\n  }\r\n\r\n}\r\n\r\nexport let profileApi = new ProfileAPI();\r\nexport let usersApi = new UsersAPI();\r\nexport let headerApi = new HeaderAPI();\r\nexport let loginApi = new LoginAPI();\r\n","const SEND_MESSAGE = 'appSocialNet/dialogsRed/SSEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  Dialogs: [\r\n    { id: 1, dialogName: \"Sergey\" },\r\n    { id: 2, dialogName: \"Alesya\" },\r\n    { id: 3, dialogName: \"Shusha\" },\r\n    { id: 4, dialogName: \"Valentina\" },\r\n    { id: 5, dialogName: \"Vladimir\" }\r\n  ],\r\n\r\n  Messages: [\r\n    { id: 1, message: \"Hi\" },\r\n    { id: 2, message: \"How are you\" },\r\n    { id: 3, message: \"Buy\" },\r\n    { id: 4, message: \"No\" }\r\n  ],\r\n}\r\n\r\nlet dialogsReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let newMessage = {id: 5, message: action.message}\r\n      return {...state, Messages: [...state.Messages, newMessage]};\r\n    }\r\n\r\n    default: return state;\r\n  }  \r\n}\r\n\r\nexport let sendMessage = (message) => ({ type: SEND_MESSAGE, message });\r\n\r\nexport default dialogsReducer;","export const updateObjectProperties = (items, objPropName, propName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === propName) {\r\n      return { ...u, ...newObjProps }\r\n    }\r\n    return u;\r\n  })\r\n};\r\n","import { usersApi } from './../api/api';\r\nimport {updateObjectProperties} from './../utils/object-helpers';\r\n\r\nconst FOLLOW = \"appSocialNet/usersRed/FOLLOW\";\r\nconst UNFOLLOW = \"appSocialNet/usersRed/UNFOLLOW\";\r\nconst SET_USERS = \"appSocialNet/usersRed/SETUSERS\";\r\nconst SET_USERS_COUNT = \"appSocialNet/usersRed/SET_USERS_COUNT\";\r\nconst SET_PAGE_COUNT = \"appSocialNet/usersRed/SET_PAGE_COUNT\";\r\nconst SET_ACTIVE_PAGE = \"appSocialNet/usersRed/SET_CURRENT_PAGE\";\r\nconst TOGGLE_IS_FETCHING = \"appSocialNet/usersRed/TOGGLE_IS_FETCHING\";\r\nconst FETCHING_FOLLOWER = \"appSocialNet/usersRed/FETCHING_FOLLOWER\";\r\n\r\n\r\nlet initState = {\r\n  pageCount: 0,\r\n  activePage: 1,\r\n  usersInPageCount: 10,\r\n  usersTotalCount: 0,\r\n  isFetching: false,\r\n  fetchingFollowerList: [],\r\n  users: [\r\n  ]\r\n}\r\n\r\nconst usersReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n\r\n    case FOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateObjectProperties(state.users, \"id\", action.userId, {followed: true})\r\n      }\r\n    }\r\n\r\n    case UNFOLLOW: {\r\n      return {\r\n        ...state,\r\n        users: updateObjectProperties(state.users, \"id\", action.userId, {followed: false})\r\n      }\r\n    }\r\n\r\n    case SET_USERS: {\r\n      return {\r\n        ...state, users: action.users\r\n      }\r\n    }\r\n\r\n    case SET_USERS_COUNT: {\r\n      return { ...state, usersTotalCount: action.usersTotalCount }\r\n    }\r\n\r\n    case SET_PAGE_COUNT: {\r\n      return { ...state, pageCount: action.pageCount }\r\n    }\r\n\r\n    case SET_ACTIVE_PAGE: {\r\n      return { ...state, activePage: action.page }\r\n    }\r\n\r\n    case TOGGLE_IS_FETCHING: {\r\n      return { ...state, isFetching: action.isFetching }\r\n    }\r\n\r\n    case FETCHING_FOLLOWER: {\r\n      return {\r\n        ...state,\r\n        fetchingFollowerList: action.isFetching\r\n          ? [...state.fetchingFollowerList, action.userId]\r\n          : [state.fetchingFollowerList.filter(id => id === action.userId)]\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default usersReducer;\r\n\r\nexport let follow = (userId) => ({ type: FOLLOW, userId });\r\nexport let unfollow = (userId) => ({ type: UNFOLLOW, userId });\r\nexport let setUsers = (users) => ({ type: SET_USERS, users });\r\nexport let setUsersTotalCount = (usersTotalCount) => ({ type: SET_USERS_COUNT, usersTotalCount });\r\nexport let setPageCount = (pageCount) => ({ type: SET_PAGE_COUNT, pageCount });\r\nexport let setActivePage = (page) => ({ type: SET_ACTIVE_PAGE, page });\r\nexport let toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching });\r\nexport let fetchingFollower = (isFetching, userId) => ({ type: FETCHING_FOLLOWER, isFetching, userId });\r\n\r\nexport const requestUsersTC = (usersInPageCount, currentPage) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let response = await usersApi.getUsers(usersInPageCount, currentPage);\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsers(response.items));\r\n};\r\n\r\nexport const getUsersTotalCountTC = (usersInPageCount) => async (dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  let response = await usersApi.getUsersTotalCount();\r\n  dispatch(toggleIsFetching(false));\r\n  dispatch(setUsersTotalCount(response.totalCount));\r\n\r\n  let pageCount = Math.ceil(response.totalCount / usersInPageCount);\r\n  dispatch(setPageCount(pageCount));\r\n};\r\n\r\nconst followUnfollowFlow = async (dispatch, id, actionFetch, actionCreator) => {\r\n  dispatch(fetchingFollower(true, id));\r\n  let response = await actionFetch(id);\r\n  if (response.resultCode === 0) {\r\n    dispatch(actionCreator(id));\r\n    dispatch(fetchingFollower(false, id));\r\n  }\r\n}\r\n\r\nexport const followTC = (id) => (dispatch) => {\r\n  followUnfollowFlow(dispatch, id, usersApi.follow, follow);\r\n\r\n  /*\r\n  dispatch(fetchingFollower(true, id));\r\n  let response = await usersApi.follow(id);\r\n  if (response.resultCode === 0) {\r\n    dispatch(follow(id));\r\n    dispatch(fetchingFollower(false, id));\r\n  }\r\n  */\r\n};\r\n\r\nexport const unfollowTC = (id) => (dispatch) => {\r\n  followUnfollowFlow(dispatch, id, usersApi.unfollow, unfollow);\r\n  /*dispatch(fetchingFollower(true, id));\r\n  let response = usersApi.unfollow(id);\r\n\r\n  if (response.resultCode === 0) {\r\n    dispatch(unfollow(id));\r\n    dispatch(fetchingFollower(false, id));\r\n  }\r\n  */\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/preloader.ccaf3211.svg\";","export const getUserId = (state) => state.Auth.userId;\r\n\r\nexport const getEmail = (state) => state.Auth.email;\r\n\r\nexport const getLogin = (state) => state.Auth.login;\r\n\r\nexport const getIsAuthFetching = (state) => state.Auth.isAuthFetching;\r\n\r\nexport const getIsAuth = (state) => state.Auth.isAuth;\r\n","import { loginApi } from './../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nimport { authMeTC } from './../redux/appReducer';\r\n\r\nconst SET_AUTH_DATA = \"appSocialNet/authRed/SET_AUTH_DATA\";\r\nconst TOGGLE_IS_AUTH_FETCHING = \"appSocialNet/authRed/TOGGLE_IS_AUTH_FETCHING\";\r\nconst LOGIN = \"appSocialNet/authRed/LOGIN\";\r\n\r\nlet initState = {\r\n  isAuthFetching: false,\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false,\r\n  password: null,\r\n  rememberMe: false,\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SET_AUTH_DATA: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n\r\n    case TOGGLE_IS_AUTH_FETCHING: {\r\n      return { ...state, isAuthFetching: action.isFetching }\r\n    }\r\n\r\n    case LOGIN: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport let setAuthData = (userId, email, login, isAuth) => ({ type: SET_AUTH_DATA, payload: { userId, email, login, isAuth } });\r\nexport let toggleIsAuthFetching = (isFetching) => ({ type: TOGGLE_IS_AUTH_FETCHING, isFetching });\r\nexport let login = (email, password, rememberMe) => ({ type: LOGIN, payload: { email, password, rememberMe } })\r\n\r\nexport const loginTC = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await loginApi.login(email, password, rememberMe);\r\n\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(authMeTC());\r\n  } else {\r\n    let errorMessage = (response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\")\r\n    dispatch(stopSubmit('login', { _error: errorMessage }))\r\n  }\r\n}\r\n\r\nexport const logoutTC = () => {\r\n  return async (dispatch) => {\r\n    let response = await loginApi.logout();\r\n\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(setAuthData(null, null, null, null));\r\n    }\r\n  };\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","\r\nimport { headerApi } from './../api/api';\r\nimport { setAuthData } from './authReducer'\r\n\r\nconst SUCCESS_INITIALIZED = 'appSocialNet/appRed/SUCESS_INITIALIZED';\r\n\r\nlet initState = {\r\n  initialized: false\r\n}\r\n\r\nconst appReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case SUCCESS_INITIALIZED: {\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n    }\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport default appReducer;\r\n\r\nexport let initialize = () => ({ type: SUCCESS_INITIALIZED });\r\n\r\nexport const authMeTC = () => async (dispatch) => {\r\n  let response = await headerApi.authMe();\r\n\r\n  if (response.data.resultCode === 0) {\r\n    let { id, email, login } = response.data.data;\r\n    dispatch(setAuthData(id, email, login, true));\r\n  }\r\n};\r\n\r\nexport let initializeApp = () => {\r\n  return (dispatch) => {\r\n    let promise = dispatch(authMeTC);\r\n    Promise.all([promise]).then(response => {\r\n      dispatch(initialize());\r\n    })\r\n  }\r\n};\r\n\r\n","import React from 'react';\nimport cssNavbar from './Navbar.module.css'\nimport { NavLink } from 'react-router-dom';\n\n\nconst Navbar = (props) => {\n\n  const ArrNav = [\n    { id: 1, name: \"Profile\", path: \"/profile\" },\n    { id: 2, name: \"Messages\", path: \"/dialog\" },\n    { id: 3, name: \"News\", path: \"/news\" },\n    { id: 4, name: \"Music\", path: \"/music\" },\n    { id: 5, name: \"Settings\", path: \"/settings\" },\n    { id: 6, name: \"Find Users\", path: \"/users\" }\n  ]\n\n  const listNav = ArrNav.map((navItem) => {\n    return (\n      <div key={navItem.id} className={cssNavbar.item}>\n        <NavLink to={navItem.path} activeClassName={cssNavbar.activeLink} > {navItem.name} </NavLink>\n      </div>)\n  });\n\n  return (\n    <nav className={cssNavbar.nav}>\n      {listNav}\n    </nav>\n  )\n}\n\nexport default Navbar;","import React from 'react';\nimport cssHeader from './Header.module.css';\nimport Preloader from '../Preloader/Preloader';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = (props) => {\n\nlet logout = () => {\n  props.logout();\n} \n\n  return (\n    <header className={cssHeader.header}>\n      \n      { props.isAuthFetching \n      ? <div><Preloader /></div> \n      : <img src=\"https://banner2.cleanpng.com/20180422/aqw/kisspng-logo-lapel-pin-mexico-3d-design-affixed-5adcdf6be17623.1829017415244245559235.jpg\" alt=\"Header\" />\n      }\n      <div className={cssHeader.loginBlock}>\n        { props.isAuth  \n          ? <div>\n              <NavLink to='/profile'>{props.login}</NavLink>\n              <button onClick={logout}>Log Out</button>\n            </div> \n          : <NavLink to={'/login'}>LogIn</NavLink> }\n      </div>\n\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logoutTC } from './../../redux/authReducer';\nimport { authMeTC } from './../../redux/appReducer';\nimport {getUserId, getEmail, getLogin, getIsAuthFetching, getIsAuth } from '../../redux/authSelectors';\n\nclass HeaderContainer extends React.Component {  \n\n  componentDidMount() {\n    let {isAuth, authMe} = this.props;\n\n    if (!isAuth) {\n      authMe();\n    }\n  }\n\n  render() {\n    return (\n      <Header {...this.props} />\n    )\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return ({\n    userId: getUserId(state),\n    email: getEmail(state),\n    login: getLogin(state),\n    isAuthFetching: getIsAuthFetching(state),\n    isAuth: getIsAuth(state)\n  })\n\n}\n\nexport default connect(mapStateToProps, { authMe: authMeTC, logout: logoutTC })(HeaderContainer);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { InputControl } from '../FormColtrols/FormControl';\r\nimport {required, maxLengthCreator} from './../../utils/validators/validators';\r\n\r\nconst maxlength100 = maxLengthCreator(30);\r\n\r\nconst LoginForm = (props) => {\r\n  let {handleSubmit, error} = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}> \r\n      <div>\r\n        <Field name=\"email\" type=\"text\" component={InputControl} placeholder=\"email\" validate = { [required, maxlength100] }/>\r\n      </div>\r\n      <div>\r\n        <Field name=\"password\" type=\"password\" component={InputControl} placeholder=\"password\" validate = { [required, maxlength100] }/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"\">Remember me</label>\r\n        <Field name=\"rememberMe\" type=\"checkbox\" component={InputControl} />\r\n      </div>\r\n      <div  className=\"formLoginError\">\r\n      { error && <strong>{error}</strong>}\r\n      </div>\r\n      \r\n      <div>\r\n        <button type=\"submit\">Submit</button>\r\n      </div>  \r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form:'login'})(LoginForm);\r\n\r\nexport default LoginReduxForm;","import React from 'react';\r\nimport LoginReduxForm from './LoginForm';\r\nimport { connect } from 'react-redux';\r\nimport {loginTC} from './../../redux/authReducer'\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport {getUserId, getIsAuth} from './../../redux/authSelectors';\r\n\r\n\r\nlet LoginContainer = (props) => {\r\n\r\n  let {login, userId, isAuth} = props;\r\n\r\n  let loginHandler = (values) => {\r\n    login(values.email, values.password, values.rememberMe);\r\n  }\r\n\r\n  if (isAuth) {\r\n    return <Redirect to={'/profile/' + userId} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>LOGIN</h1>\r\n    <LoginReduxForm onSubmit={loginHandler} />\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userId: getUserId(state),\r\n    isAuth: getIsAuth(state)\r\n  }\r\n}\r\n\r\nLoginContainer = connect(mapStateToProps, { login: loginTC })(LoginContainer)\r\n\r\nexport default LoginContainer;","import React, { Suspense, lazy } from 'react';\nimport { Route, withRouter, Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\n\nimport { initializeApp } from './redux/appReducer';\nimport Preloader from './components/Preloader/Preloader';\n\nimport Navbar from './components/Navbar/Navbar';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginContainer from './components/Login/LoginContainer';\n//import ProfileContainer from './components/Profile/ProfileContainer';\n//import DialogsContainer from './components/Dialogs/DialogsContainer';\n//import UsersContainer from './components/Users/UsersContainer';\n\nimport './App.css';\n\nconst ProfileContainer = lazy(()=> import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = lazy(()=> import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = lazy(()=> import('./components/Users/UsersContainer'));\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render() {\n    if (this.props.initialized === false) return <div><Preloader /></div>\n    return (\n      <div className=\"app-wrapper\">\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Redirect from=\"/\" to=\"/profile\" />\n\n          <Suspense fallback={<div>...Loading</div>}>\n            <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\n            <Route path=\"/dialog\" render={() => <DialogsContainer />} />\n            <Route path=\"/users\" render={() => <UsersContainer />} />\n          </Suspense>\n\n          <Route path=\"/login\" render={() => <LoginContainer />} />\n        </div>\n      </div>\n    )\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return { initialized: state.appState.initialized }\n}\n\nexport default compose(connect(mapStateToProps, { initializeApp }), withRouter)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport appReducer from './appReducer'\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer} from 'redux-form';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nlet reducers = combineReducers(\r\n    {\r\n        ProfileState: profileReducer,\r\n        DialogState: dialogsReducer,\r\n        UsersState: usersReducer,\r\n        Auth: authReducer,\r\n        form: formReducer,\r\n        appState: appReducer\r\n    }\r\n)\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport {Provider} from 'react-redux';\n\n// let rerender = (state) => {\n  ReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        < App />\n      </Provider>\n    </HashRouter>\n    , document.getElementById('root'));\n// }\n\nwindow.store = store;\n// rerender(store.getState());\n\n// store.subscribe(() => {\n//   let state = store.getState();\n//   rerender(state);\n// });\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React from 'react';\r\nimport preloaderimg from '../../assets/image/preloader.svg'\r\n\r\nlet Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img src={preloaderimg} alt=\"preloader\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport styles from './styleControl.module.css'\r\n\r\nconst FormControl = (props) => {\r\n  let { meta } = props;\r\n\r\n  const hasError = meta.touched && meta.error;\r\n\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      {props.children}\r\n      {hasError && <span>{meta.error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const InputControl = (props) => {\r\n  let { input, meta, ...otherProps } = props;\r\n  return <FormControl {...props} > <input {...input} {...otherProps} /> </FormControl>\r\n}\r\n\r\nexport const TextareaControl = (props) => {\r\n  let { input, meta, ...otherProps } = props;\r\n  return <FormControl {...props} > <textarea {...input} {...otherProps} /> </FormControl>\r\n}\r\n","export const required = (value) => {\r\n  return (value) ? undefined : \"Value is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n  return (value) => {\r\n    return (value && value.length > maxLength) ? `Must be ${maxLength} characters or less` : undefined;  \r\n  }\r\n}  ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1h2EA\",\"item\":\"Navbar_item__3DqOu\",\"activeLink\":\"Navbar_activeLink__1gx-b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__l73H1\",\"loginBlock\":\"Header_loginBlock__gunzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"styleControl_formControl__3qM1Q\",\"error\":\"styleControl_error__8KtBr\"};","import { profileApi } from './../api/api';\r\n\r\nconst ADD_POST = 'appSocialNet/profileRed/ADD-POST';\r\nconst SET_PROFILE = 'appSocialNet/profileRed/SET_PROFILE';\r\nconst SET_PROFILE_STATUS = 'appSocialNet/profileRed/SET_PROFILE_STATUS';\r\nconst SET_PHOTO_SUCESS = 'appSocialNet/profileRed/SET_PHOTO_SUCESS';\r\n\r\nlet initialState = {\r\n  Posts: [\r\n    { id: 1, message: \"HI, I'm cool hacker=)\", countLikes: 100 },\r\n    { id: 2, message: \"HI, I'm cool hacker=)\", countLikes: 1000 },\r\n    { id: 3, message: \"HI, I'm cool hacker=)\", countLikes: 10000 },\r\n    { id: 4, message: \"HI, I'm cool hacker=)\", countLikes: 100000 }],\r\n  profile: null,\r\n  status: \"\",\r\n}\r\n\r\nlet profileReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_POST: {\r\n      let newPost = { id: 5, message: action.newPost, countLikes: 0 }\r\n      return { ...state, Posts: [...state.Posts, newPost] };\r\n    }\r\n\r\n    case SET_PROFILE: {\r\n      return { ...state, profile: action.profile };\r\n    }\r\n\r\n    case SET_PROFILE_STATUS: {\r\n      return { ...state, status: action.status }\r\n    }\r\n\r\n    case SET_PHOTO_SUCESS: {\r\n      return {...state, profile: {...state.profile, photos: action.photos}}\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n}\r\n\r\nexport let addPost = (newPost) => ({ type: ADD_POST, newPost });\r\n\r\nexport let setProfile = (profile) => ({ type: SET_PROFILE, profile })\r\nexport let setProfileStatus = (status) => ({ type: SET_PROFILE_STATUS, status });\r\n\r\nexport const getProfileTC = (userId) => async (dispatch) => {\r\n  let response = await profileApi.getProfile(userId);\r\n  dispatch(setProfile(response));\r\n}\r\n\r\nexport const getProfileStatusTC = (userId) => async (dispatch) => {\r\n  let response = await profileApi.getProfileStatus(userId);\r\n  dispatch(setProfileStatus(response))\r\n\r\n}\r\n\r\nexport const setProfileStatusTC = (status) => async (dispatch) => {\r\n  let response = await profileApi.setProfileStatus(status);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setProfileStatus(status));\r\n  }\r\n}\r\n\r\nexport let setPhotoSuccess = (photos) => ({ type: SET_PHOTO_SUCESS, photos })\r\n\r\n\r\nexport const setPhotoTC = (photoFile) => async (dispatch) => {\r\n  let response = await profileApi.setPhoto(photoFile);\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setPhotoSuccess(response.data.data.photos));\r\n  }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}