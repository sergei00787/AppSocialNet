{"version":3,"sources":["components/Hocs/RedirectHoc.jsx","components/Profile/MyPosts/Post/Post.module.css","components/Profile/Wallpaper/Wallpaper.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/NewPostReduxForm.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profileSelectors.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Wallpaper/Wallpaper.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatus.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","userId","getUserId","isAuth","getIsAuth","withAuthRedirectHoc","WrappedComponent","Component","this","props","to","React","connect","module","exports","Post","className","cssPost","postconteiner","avatar","src","alt","item","message","countLikes","maxlength30","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextareaControl","type","placeholder","validate","required","MyPosts","addPost","Posts","posts","map","post","key","id","NewPostReduxForm","value","e","newPost","GetProfile","ProfileState","profile","GetStatus","status","GetPosts","GetNewPost","NewPost","MyPostsConteiner","Wallpaper","style","wallpaper","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","TypeError","ProfileStatus","useState","editMode","setEditMode","setStatus","useEffect","s","boxstatus","autoFocus","onBlur","setProfileStatus","onChange","target","onDoubleClick","Profile","fullName","lookingForAJob","lookingForAJobDescription","contacts","photos","github","vk","facebook","instagram","twitter","website","youtube","mainLink","large","ProfileContainer","match","params","getProfile","getProfileStatus","Preloader","compose","getProfileTC","setProfileStatusTC","getProfileStatusTC","withRouter","whitRedirectHoc"],"mappings":"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","file":"static/js/5.85625f63.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getUserId, getIsAuth } from '../../redux/authSelectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    userId: getUserId(state),\r\n    isAuth: getIsAuth(state)\r\n  }\r\n}\r\n\r\nconst withAuthRedirectHoc = (WrappedComponent) => {\r\n\r\n  class Component extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />;\r\n      return <WrappedComponent {...this.props}/>;\r\n    }\r\n  }\r\n\r\n  let AuthComponent = connect(mapStateToProps)(Component)\r\n\r\n  return AuthComponent;\r\n\r\n}\r\n\r\nexport default withAuthRedirectHoc;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postconteiner\":\"Post_postconteiner__3MlWg\",\"avatar\":\"Post_avatar__1zeuW\",\"item\":\"Post_item__2SqYr\",\"like\":\"Post_like__19b90\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallpaper\":\"Wallpaper_wallpaper__2oTuH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxstatus\":\"Profile_boxstatus__2UYcs\"};","import React from 'react';\nimport cssPost from './Post.module.css'\n\n\nconst Post = (props) => {\n  return (\n    <div className={cssPost.postconteiner}>\n      <img className={cssPost.avatar} src=\"https://avatars.mds.yandex.net/get-pdb/753890/572330fb-c49e-47c8-a9c7-c04582ace159/s1200\" alt=\"\"/>  \n      <span className={cssPost.item}>{props.message}</span>\n      <div className=\"like\">{props.countLikes}</div>\n    </div>\n\n  )\n}\n\nexport default Post;","import React from 'react';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {required, maxLengthCreator} from './../../../utils/validators/validators';\r\nimport { TextareaControl } from './../../FormColtrols/FormControl';\r\n\r\n\r\nconst maxlength30 = maxLengthCreator(30);\r\n\r\nconst NewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field name='newPost' \r\n             component={ TextareaControl }\r\n             type='text' \r\n             placeholder='Добавьте новый пост' \r\n             validate={ [required, maxlength30] } />\r\n      <button>Отправить</button>\r\n    </form>\r\n  )\r\n    \r\n}\r\n\r\nexport default reduxForm({form:'NewPostForm'})(NewPostForm)","import React from 'react';\n// import cssMyPosts from './MyPosts.module.css'\nimport Post from './Post/Post';\nimport NewPostReduxForm from './NewPostReduxForm'\n\nconst MyPosts = (props) => {\n\n  let {addPost, posts} = props;\n\n  let onAddPost = (value, e) => {\n    addPost(value.newPost);\n  }  \n\n  const Posts = posts.map(post => {\n    return (\n      <Post key={post.id} message={post.message} countLikes={post.countLikes} />\n    )\n  });  \n\n  return (\n    <div className=\"MyPosts\">\n      <NewPostReduxForm onSubmit={onAddPost} />\n      { Posts }\n    </div>\n\n  )\n}\n\nexport default MyPosts;","export const GetProfile = (state) => state.ProfileState.profile;\r\n\r\nexport const GetStatus = (state) => state.ProfileState.status;\r\n\r\nexport const GetPosts = (state) => state.ProfileState.Posts;\r\n\r\nexport const GetNewPost = (state) => state.ProfileState.NewPost;","import MyPosts from './MyPosts';\nimport { addPost } from './../../../redux/profileReducer';\nimport { connect } from 'react-redux';\nimport {GetPosts, GetNewPost} from  '../../../redux/profileSelectors'\n\nlet mapStateToProps = (state) => {\n  return (\n    {\n      posts: GetPosts(state),\n      newPost: GetNewPost(state)\n    }\n  )\n}\n\nconst MyPostsConteiner = connect(mapStateToProps, {addPost})(MyPosts);\n\nexport default MyPostsConteiner;","import React from 'react';\nimport style from './Wallpaper.module.css';\n\nconst Wallpaper = () => {\n    return (\n        <div className=\"\">\n            <div className={style.wallpaper}>\n                <img src=\"https://www.tokkoro.com/picsup/5571787-social-network-wallpapers.jpg\" alt=\"Pictures wallpaper\"/>\n            </div>\n        </div>\n\n    )\n}\n\nexport default Wallpaper;","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React from 'react';\r\nimport s from './Profile.module.css'\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => setStatus(props.status) , [props.status]);\r\n\r\n  const enabledEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const disabledEditMode = () => {\r\n    setEditMode(false);\r\n    props.setProfileStatus(status);\r\n  }\r\n\r\n  const changeStatus = (e) => {\r\n    setStatus(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {(!editMode) \r\n      ? <div className={s.boxstatus}  onDoubleClick= {enabledEditMode} >{(!status)? \"Введите статус\" : status}</div>\r\n      : <div><input className={s.boxstatus}\r\n                    placeholder=\"Введите статус\" \r\n                    autoFocus={ true } \r\n                    value={ status } \r\n                    onBlur={ disabledEditMode }\r\n                    onChange={ changeStatus } /></div>}\r\n    </>)\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\n// import style from './Profile.module.css';\nimport MyPostsConteiner from './MyPosts/MyPostsContainer';\nimport Wallpaper from './Wallpaper/Wallpaper';\nimport ProfileStatus from './ProfileStatus'\n\n\n\nconst Profile = (props) => {\n  let {fullName, lookingForAJob, lookingForAJobDescription, contacts, photos, setProfileStatus, status} = props\n  return (\n    <div>\n      <Wallpaper />\n      {!props.fullName ?\n        null\n      :\n      <div className=\"profileWrap\">\n        <div>{fullName}</div>\n        <div>{lookingForAJob}</div>\n        <div>{lookingForAJobDescription}</div>\n        <div>{contacts.github}</div>\n        <div>{contacts.vk}</div>\n        <div>{contacts.facebook}</div>\n        <div>{contacts.instagram}</div>\n        <div>{contacts.twitter}</div>\n        <div>{contacts.website}</div>\n        <div>{contacts.youtube}</div>\n        <div>{contacts.mainLink}</div>\n        <img src={photos.large} alt=\"\"/>\n      </div>}\n      <ProfileStatus setProfileStatus = {setProfileStatus} status = {status}/>\n      <MyPostsConteiner />\n    </div>\n  )\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Profile from './Profile';\nimport { getProfileTC, getProfileStatusTC, setProfileStatusTC } from '../../redux/profileReducer';\nimport { withRouter } from 'react-router-dom';\nimport whitRedirectHoc from './../Hocs/RedirectHoc'\nimport { compose } from 'redux';\nimport Preloader from '../Preloader/Preloader';\nimport {GetProfile, GetStatus} from '../../redux/profileSelectors';\n\n\nclass ProfileContainer extends React.Component {\n  \n  componentDidMount() {\n    let userId = (this.props.match.params.userId !== undefined) ? this.props.match.params.userId : this.props.userId\n    this.props.getProfile(userId);\n    this.props.getProfileStatus(userId);\n  }\n\n  render() {\n    if (!this.props.profile) return <Preloader />\n    return (\n      <Profile {...this.props.profile} setProfileStatus={this.props.setProfileStatus} status={this.props.status} />\n    )\n  }\n\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: GetProfile(state),\n    status: GetStatus(state)\n  }\n}\n\nexport default compose(connect(mapStateToProps, {\n  getProfile: getProfileTC,\n  setProfileStatus: setProfileStatusTC,\n  getProfileStatus: getProfileStatusTC\n}),\n  withRouter,\n  whitRedirectHoc)(ProfileContainer);\n\n"],"sourceRoot":""}