{"version":3,"sources":["components/Hocs/RedirectHoc.jsx","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogForm.jsx","components/Dialogs/Dialogs.jsx","redux/dialogsSelectors.js","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","userId","getUserId","isAuth","getIsAuth","withAuthRedirectHoc","WrappedComponent","Component","this","props","to","React","connect","module","exports","DialogItem","id","DialogName","path","className","style","dialog","Message","message","messageItem","maxlength30","maxLengthCreator","DialogFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextareaControl","name","placeholder","type","validate","required","Dialogs","sendMessage","dialogs","messages","DialogsElements","map","key","dialogName","MessagesElements","dialogsWrap","dialogsBox","messagesBox","value","GetDailogs","DialogState","GetMessages","Messages","GetNewMessage","NewMessage","compose","newMessage"],"mappings":"8LAKIA,EAAkB,SAACC,GACrB,MAAO,CACLC,OAAQC,YAAUF,GAClBG,OAAQC,YAAUJ,KAmBPK,IAfa,SAACC,GAAsB,IAE3CC,EAF0C,iLAI5C,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAqBE,KAAKC,OADH,kBAAC,IAAD,CAAUC,GAAG,eAJA,GAExBC,IAAMJ,WAS9B,OAFoBK,YAAQb,EAARa,CAAyBL,K,oBCpB/CM,EAAOC,QAAU,CAAC,YAAc,6BAA6B,WAAa,4BAA4B,WAAa,8B,oBCAnHD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,oBCA/DD,EAAOC,QAAU,CAAC,QAAU,2B,wGCcbC,EAXI,SAACN,GAAW,IACxBO,EAAkBP,EAAlBO,GAAIC,EAAcR,EAAdQ,WAELC,EAAO,WAAaF,EACxB,OACE,yBAAKG,UAAWC,IAAMC,QACpB,kBAAC,IAAD,CAASX,GAAIQ,GAAOD,K,kBCDXK,EANC,SAACb,GACf,OACE,yBAAKU,UAAWC,IAAMG,SAAUd,EAAMe,c,kCCApCC,EAAcC,YAAiB,IAiBtBC,EAFOC,YAAU,CAACC,KAAM,kBAAjBD,EAbL,SAACnB,GAChB,OACE,0BAAMqB,SAAUrB,EAAMsB,cACpB,kBAACC,EAAA,EAAD,CAAOC,UAAYC,IACZC,KAAK,UACLC,YAAY,oGACZC,KAAK,OACLC,SAAa,CAACC,IAAUd,KAC/B,4BAAQY,KAAK,UAAb,8DCyBSG,EAlCC,SAAC/B,GAAW,IAErBgC,EAAmChC,EAAnCgC,YAAaC,EAAsBjC,EAAtBiC,QAASC,EAAalC,EAAbkC,SAIrBC,EAAkBF,EAAQG,KAAI,SAAAxB,GAClC,OACE,kBAAC,EAAD,CAAYyB,IAAKzB,EAAOL,GAAIC,WAAYI,EAAO0B,WAAY/B,GAAIK,EAAOL,QAIpEgC,EAAmBL,EAASE,KAAI,SAAAtB,GACpC,OACE,kBAAC,EAAD,CAASuB,IAAKvB,EAAQP,GAAIQ,YAAaD,EAAQA,aAInD,OACE,yBAAKJ,UAAWC,IAAM6B,aACpB,yBAAK9B,UAAWC,IAAM8B,YACnBN,GAEH,yBAAKzB,UAAWC,IAAM+B,aACnBH,EAED,kBAAC,EAAD,CAAiBlB,SAtBH,SAACsB,GAAD,OAAWX,EAAYW,EAAM7B,e,iCCVtC8B,EAAa,SAACrD,GAAD,OAAWA,EAAMsD,YAAYd,SAE1Ce,EAAc,SAACvD,GAAD,OAAWA,EAAMsD,YAAYE,UAE3CC,EAAgB,SAACzD,GAAD,OAAWA,EAAMsD,YAAYI,YCa3CC,sBAAQ/C,aAVD,SAACZ,GACrB,MACE,CACE0C,QAASW,EAAWrD,GACpB2C,SAAUY,EAAYvD,GACtB4D,WAAYH,EAAczD,MAKgB,CAACyC,kBAAepC,IAAjDsD,CAAsEnB","file":"static/js/4.cc0ed95e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {getUserId, getIsAuth } from '../../redux/authSelectors';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    userId: getUserId(state),\r\n    isAuth: getIsAuth(state)\r\n  }\r\n}\r\n\r\nconst withAuthRedirectHoc = (WrappedComponent) => {\r\n\r\n  class Component extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to='/login' />;\r\n      return <WrappedComponent {...this.props}/>;\r\n    }\r\n  }\r\n\r\n  let AuthComponent = connect(mapStateToProps)(Component)\r\n\r\n  return AuthComponent;\r\n\r\n}\r\n\r\nexport default withAuthRedirectHoc;\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsWrap\":\"Dialogs_dialogsWrap__2IiYP\",\"dialogsBox\":\"Dialogs_dialogsBox__1WDnZ\",\"messageBox\":\"Dialogs_messageBox__1-PnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__21ywO\",\"active\":\"DialogItem_active__sv5QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2h1gM\"};","import React from 'react';\nimport style from './DialogItem.module.css'\nimport { NavLink } from 'react-router-dom';\n\nconst DialogItem = (props) => {\n  let {id, DialogName} = props;\n\n  let path = \"/dialog/\" + id;\n  return (\n    <div className={style.dialog}>\n      <NavLink to={path}>{DialogName}</NavLink>\n    </div>\n  )\n}\n\nexport default DialogItem;","import React from 'react';\nimport style from './Message.module.css'\n\nconst Message = (props) => {\n  return (\n    <div className={style.message}>{props.messageItem}</div>\n  )\n}\n\nexport default Message;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator} from './../../utils/validators/validators';\r\nimport { TextareaControl } from './../FormColtrols/FormControl';\r\n\r\nconst maxlength30 = maxLengthCreator(30);\r\n\r\nlet DialogForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field component={ TextareaControl } \r\n             name=\"message\" \r\n             placeholder=\"Введите сообщение\" \r\n             type=\"text\" \r\n             validate = { [required, maxlength30] }/>\r\n      <button type=\"submit\">Отправить</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nlet DialogFormRedux = reduxForm({form: 'addMessageForm'})(DialogForm);\r\n\r\nexport default DialogFormRedux;","import React from 'react';\nimport style from './Dialogs.module.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport DialogFormRedux from './DialogForm';\n\nconst Dialogs = (props) => {\n\n  let {sendMessage, dialogs, messages } = props;\n\n  let onSendMessage = (value) => sendMessage(value.message);\n  \n  const DialogsElements = dialogs.map(dialog => {\n    return (\n      <DialogItem key={dialog.id} DialogName={dialog.dialogName} id={dialog.id} />\n    )\n  });\n\n  const MessagesElements = messages.map(message => {\n    return (\n      <Message key={message.id} messageItem={message.message} />\n    )\n  });\n\n  return (\n    <div className={style.dialogsWrap}>\n      <div className={style.dialogsBox}>\n        {DialogsElements}\n      </div>\n      <div className={style.messagesBox}>\n        {MessagesElements}\n\n        <DialogFormRedux onSubmit={onSendMessage}/>\n        \n      </div>\n\n    </div>\n  )\n}\n\nexport default Dialogs;","export const GetDailogs = (state) => state.DialogState.Dialogs;\r\n\r\nexport const GetMessages = (state) => state.DialogState.Messages;\r\n\r\nexport const GetNewMessage = (state) => state.DialogState.NewMessage;","import Dialogs from './Dialogs';\nimport { sendMessage } from '../../redux/dialogsReducer';\nimport {connect} from 'react-redux';\nimport withAuthRedirectHoc from './../Hocs//RedirectHoc'\nimport { compose } from 'redux';\nimport {GetDailogs, GetMessages, GetNewMessage} from './../../redux/dialogsSelectors'\n\nlet mapStateToProps = (state) => {\n  return (\n    {\n      dialogs: GetDailogs(state),\n      messages: GetMessages(state),\n      newMessage: GetNewMessage(state)\n    }\n  )\n}\n\nexport default compose(connect(mapStateToProps, {sendMessage}), withAuthRedirectHoc)(Dialogs);"],"sourceRoot":""}